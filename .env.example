# =============================================================================
# BOUNSSER MONOREPO - ENVIRONMENT CONFIGURATION
# =============================================================================
# Copy this file to .env.local and configure your actual values
# This file contains all environment variables for both backend and frontend
#
# üîí SECURITY WARNING: Never commit actual credentials to version control
# =============================================================================

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Environment (development, production, test)
NODE_ENV=development

# Application URLs
NEXT_PUBLIC_APP_NAME=Bounsser
NEXT_PUBLIC_APP_URL=http://localhost:3000
NEXT_PUBLIC_API_BASE_URL=http://localhost:5000/api/v1

# Backend Configuration
PORT=5000
API_VERSION=v1
APP_NAME=Bounsser
APP_URL=http://localhost:5000

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL Database
DATABASE_URL=postgresql://bounsser:bounsser_password@localhost:5432/bounsser_dev
DATABASE_URL_TEST=postgresql://bounsser:bounsser_password@localhost:5432/bounsser_test

# Database Pool Settings
DB_POOL_MIN=2
DB_POOL_MAX=10
DB_TIMEOUT=30000

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================

# Redis Connection
REDIS_URL=redis://localhost:6379
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0
REDIS_SESSION_URL=redis://localhost:6379/1

# =============================================================================
# TWITTER API CONFIGURATION
# =============================================================================
# ‚ö†Ô∏è  REQUIRED: Get these from https://developer.twitter.com/
# =============================================================================

# Twitter API v2 Credentials
TWITTER_API_KEY="${TEST_TWITTER_API_KEY:-test-twitter-api-key}"
TWITTER_API_SECRET="${TEST_TWITTER_API_SECRET:-test-twitter-api-secret}"
TWITTER_ACCESS_TOKEN="${TEST_TWITTER_ACCESS_TOKEN:-test-twitter-access-token}"
TWITTER_ACCESS_TOKEN_SECRET="${TEST_TWITTER_ACCESS_TOKEN_SECRET:-test-twitter-access-token-secret}"

# Twitter OAuth 2.0 Credentials
TWITTER_CLIENT_ID="${TWITTER_CLIENT_ID:-your_twitter_client_id_here}"
TWITTER_CLIENT_SECRET="${TWITTER_CLIENT_SECRET:-your_twitter_client_secret_here}"

# Twitter API Settings
TWITTER_API_BASE_URL="${TWITTER_API_BASE_URL:-https://api.twitter.com/2}"
TWITTER_OAUTH_CALLBACK_URL="${TWITTER_OAUTH_CALLBACK_URL:-http://localhost:3000/auth/twitter/callback}"

# Twitter Rate Limiting
TWITTER_RATE_LIMIT_WINDOW=900000
TWITTER_RATE_LIMIT_MAX_REQUESTS=300

# =============================================================================
# AUTHENTICATION & SECURITY
# =============================================================================

# JWT Configuration (‚ö†Ô∏è  MUST be at least 32 characters)
JWT_SECRET="${JWT_SECRET:-$(openssl rand -base64 32)}"
JWT_REFRESH_SECRET="${JWT_REFRESH_SECRET:-$(openssl rand -base64 32)}"
JWT_EXPIRES_IN="7d"
JWT_REFRESH_EXPIRES_IN="30d"

# Session Configuration (‚ö†Ô∏è  MUST be at least 32 characters)
SESSION_SECRET="${SESSION_SECRET:-$(openssl rand -base64 32)}"

SESSION_MAX_AGE=86400000

# Encryption (‚ö†Ô∏è  MUST be exactly 64 characters - hex string)
ENCRYPTION_KEY="${ENCRYPTION_KEY:-$(openssl rand -hex 32)}"
ENCRYPTION_IV_LENGTH=16

# Password Hashing
BCRYPT_ROUNDS=12

# =============================================================================
# QUEUE CONFIGURATION (BullMQ)
# =============================================================================

# Queue Concurrency Settings
QUEUE_CONCURRENCY_STREAM=5
QUEUE_CONCURRENCY_WEBHOOK=10
QUEUE_CONCURRENCY_SCORING=3
QUEUE_CONCURRENCY_NOTIFICATION=8

# Queue Retry Settings
QUEUE_MAX_RETRIES=3
QUEUE_RETRY_DELAY=5000

# =============================================================================
# EMAIL CONFIGURATION (SMTP)
# =============================================================================

# SMTP Settings (optional - for notifications)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-email-password-or-app-password
EMAIL_FROM=noreply@yourdomain.com

# =============================================================================
# EXTERNAL INTEGRATIONS
# =============================================================================

# Slack Integration (optional)
SLACK_BOT_TOKEN=xoxb-your-slack-bot-token
SLACK_SIGNING_SECRET=your-slack-signing-secret
SLACK_DEFAULT_CHANNEL=#alerts
WEBHOOK_SLACK=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK

# Discord Integration (optional)
DISCORD_BOT_TOKEN=your-discord-bot-token
DISCORD_GUILD_ID=your-discord-guild-id
DISCORD_CHANNEL_ID=your-discord-channel-id
WEBHOOK_DISCORD=https://discord.com/api/webhooks/YOUR/DISCORD/WEBHOOK

# Vision/ML Services (optional)
VISION_API_KEY=your-vision-api-key
VISION_API_URL=https://vision.googleapis.com/v1
ML_SERVICE_URL=https://your-ml-service.com/api
ML_SERVICE_API_KEY=your-ml-service-api-key

# =============================================================================
# MONITORING & OBSERVABILITY
# =============================================================================

# Logging Configuration
LOG_LEVEL=info
LOG_FILE_PATH=logs/app.log
LOG_MAX_SIZE=20m
LOG_MAX_FILES=5
LOG_DATE_PATTERN=YYYY-MM-DD

# Metrics Configuration
METRICS_ENABLED=true
METRICS_PORT=9090
METRICS_PATH=/metrics

# Health Checks
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_PATH=/health

# =============================================================================
# SCORING & FEATURE CONFIGURATION
# =============================================================================

# Scoring Weights (must sum to 1.0)
SCORING_WEIGHTS_USERNAME=0.4
SCORING_WEIGHTS_DISPLAY_NAME=0.3
SCORING_WEIGHTS_PROFILE_IMAGE=0.2
SCORING_WEIGHTS_METADATA=0.1

# Score Thresholds (0.0 to 1.0)
THRESHOLD_LOW=0.3
THRESHOLD_MEDIUM=0.6
THRESHOLD_HIGH=0.8

# Feature Flags
FEATURE_AUTO_REPLY=false
FEATURE_ML_SCORING=false
FEATURE_IMAGE_ANALYSIS=true
FEATURE_ADVANCED_METRICS=true

# =============================================================================
# RATE LIMITING & SECURITY
# =============================================================================

# General Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100
RATE_LIMIT_SKIP_SUCCESSFUL_REQUESTS=false

# Endpoint-Specific Rate Limits
RATE_LIMIT_AUTH_MAX=5
RATE_LIMIT_API_MAX=100
RATE_LIMIT_WEBHOOK_MAX=1000

# CORS Configuration
CORS_ORIGIN=http://localhost:3000,http://localhost:3001
CORS_CREDENTIALS=true

# Security Headers
SECURITY_HSTS_MAX_AGE=31536000
SECURITY_CONTENT_SECURITY_POLICY=default-src 'self'

# =============================================================================
# DEVELOPMENT & TESTING
# =============================================================================

# Development Features
DEV_ENABLE_SWAGGER=true
DEV_ENABLE_PLAYGROUND=true
DEV_MOCK_TWITTER_API=false

# Testing Configuration
TEST_TIMEOUT=30000
TEST_DB_RESET=true
TEST_PARALLEL=false

# =============================================================================
# DEPLOYMENT & INFRASTRUCTURE
# =============================================================================

# Docker Configuration
DOCKER_REGISTRY=your-docker-registry.com
DOCKER_IMAGE_TAG=latest

# Kubernetes Configuration
K8S_NAMESPACE=bounsser
K8S_SERVICE_ACCOUNT=bounsser-service-account

# Health Probe Paths
READINESS_PROBE_PATH=/ready
LIVENESS_PROBE_PATH=/live

# =============================================================================
# BACKUP & MAINTENANCE
# =============================================================================

# Backup Configuration
BACKUP_ENABLED=true
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=30

# AWS S3 Backup (optional)
BACKUP_S3_BUCKET=your-backup-bucket
BACKUP_S3_REGION=us-east-1

# Maintenance Mode
MAINTENANCE_MODE=false
MAINTENANCE_MESSAGE="System under maintenance. Please try again later."

# =============================================================================
# DEBUGGING & PROFILING
# =============================================================================

# Debug Configuration
DEBUG=bounsser:*
DEBUG_COLORS=true
DEBUG_HIDE_DATE=false

# Performance Monitoring
ENABLE_PROFILING=false
PROFILING_SAMPLE_RATE=0.1

# Memory Management
MEMORY_LIMIT_MB=512
MEMORY_WARNING_THRESHOLD=0.8

# =============================================================================
# ADDITIONAL CONFIGURATION
# =============================================================================

# Valid API Keys (comma-separated)
VALID_API_KEYS=dev-api-key-1,dev-api-key-2

# Enable Test Logging
ENABLE_TEST_LOGGING=false

# =============================================================================
# QUICK SETUP NOTES
# =============================================================================
#
# üöÄ TO GET STARTED:
#
# 1. Copy this file to .env.local:
#    cp .env.example .env.local
#
# 2. Configure required Twitter API credentials:
#    - Visit https://developer.twitter.com/
#    - Create a new app and get your API keys
#    - Update TWITTER_* variables above
#
# 3. Generate secure secrets (32+ characters):
#    - JWT_SECRET
#    - JWT_REFRESH_SECRET
#    - SESSION_SECRET
#
# 4. Start development:
#    npm run dev
#
# üìö For detailed setup instructions, see README.md
#
# =============================================================================
